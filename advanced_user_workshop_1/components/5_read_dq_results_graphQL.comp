<?xml version='1.0' encoding='UTF-8'?>
<purity-config xmlns:comm="http://www.ataccama.com/purity/comment" version="13.3.2.final">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Trash) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.io.Trash" disabled="false" id="Trash">
		<properties/>
		<visual-constraints layout="vertical" bounds="576,360,-1,-1"/>
	</step>



<!-- (attributes_with_assigned_terms) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.io.text.read.TextFileReader" disabled="false" id="attributes_with_assigned_terms">
		<properties lineMaxReadLength="65536" fileName="../data/out/attributes_with_assigned_terms.csv" fieldSeparator=";" stringQualifierEscape="&quot;" numberOfLinesInFooter="0" compression="NONE" encoding="UTF-8" lineSeparator="\r\n" stringQualifier="&quot;" numberOfLinesInHeader="1">
			<columns>
				<textReaderColumn name="attribute_id" ignore="false" type="STRING"/>
				<textReaderColumn name="originPath" ignore="false" type="STRING"/>
				<textReaderColumn name="Source" ignore="false" type="STRING"/>
				<textReaderColumn name="table_path" ignore="false" type="STRING"/>
				<textReaderColumn name="Rule_to_run" ignore="false" type="STRING"/>
				<textReaderColumn name="attribute_name" ignore="false" type="STRING"/>
				<textReaderColumn name="term_id" ignore="false" type="STRING"/>
			</columns>
			<dataFormatParameters falseValue="false" dateTimeFormat="yy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yy-MM-dd" trueValue="true" dateFormatLocale="en_US" thousandsSeparator=""/>
			<errorHandlingStrategy rejectFileName="rejected.txt">
				<errorInstructions>
					<errorInstruction dataStrategy="READ_POSSIBLE" errorType="EXTRA_DATA" putToLog="true" putToReject="false"/>
					<errorInstruction dataStrategy="STOP" errorType="LONG_LINE" putToLog="true" putToReject="true"/>
					<errorInstruction dataStrategy="STOP" errorType="PROCESSING_ERROR" putToLog="true" putToReject="false"/>
					<errorInstruction dataStrategy="READ_POSSIBLE" errorType="INVALID_DATE" putToLog="true" putToReject="false"/>
					<errorInstruction dataStrategy="READ_POSSIBLE" errorType="SHORT_LINE" putToLog="true" putToReject="true"/>
					<errorInstruction dataStrategy="NULL_VALUE" errorType="UNPARSABLE_FIELD" putToLog="true" putToReject="false"/>
				</errorInstructions>
			</errorHandlingStrategy>
			<shadowColumns/>
		</properties>
		<visual-constraints layout="vertical" bounds="480,72,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="attributes_with_assigned_terms"/>
		<target endpoint="in" step="read dq from attribute"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (dq_report.csv) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.io.text.write.TextFileWriter" disabled="false" id="dq_report.csv">
		<properties writeHeader="true" fileName="../data/out/reports/dq_report.csv" fieldSeparator=";" generateMetadata="true" stringQualifierEscape="&quot;" writeAllColumns="true" compression="NONE" encoding="UTF-8" lineSeparator="\r\n" stringQualifier="&quot;" useStringQualifierOnAllColumns="false">
			<columns/>
			<dataFormatParameters falseValue="false" dateTimeFormat="yyyy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yyyy-MM-dd" trueValue="true" dateFormatLocale="en_US" thousandsSeparator=""/>
		</properties>
		<visual-constraints layout="vertical" bounds="432,360,48,48"/>
	</step>



<!-- (read dq from attribute) --><step mode="NORMAL" className="com.ataccama.dqc.tasks.io.json.call.JsonCall" disabled="false" id="read dq from attribute">
		<properties templateEndMark="#" urlResource="workshopUrl" method="POST" timeoutMs="10000" urlBeginMark="%" urlEndMark="%" parseErrorResponse="false" templateBeginMark="#" encoding="UTF-8" inputTemplate="{&quot;query&quot;:&quot;query q {attribute(gid:\&quot;#attribute_id#\&quot;) {\r\n  publishedVersion {\r\n    dqEvalAggr {\r\n      publishedVersion {\r\n        validityAggr {\r\n          publishedVersion{\r\n            validCount, invalidCount, overallQuality\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}}&quot;,&quot;variables&quot;:{}}" delayBetweenRequestsMs="0">
			<dataFormatParameters falseValue="false" dateTimeFormat="yyyy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yyyy-MM-dd" trueValue="true" dateFormatLocale="en_US" thousandsSeparator=""/>
			<reader>
				<dataFormatParameters falseValue="false" dateTimeFormat="yy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yy-MM-dd" trueValue="true" dateFormatLocale="en_US" class="com.ataccama.dqc.tasks.io.text.read.TextReaderDataFormatParameters" thousandsSeparator=""/>
				<dataStreams>
					<rootJsonStreamConfig path="$.data.attribute.publishedVersion.dqEvalAggr.publishedVersion.validityAggr.publishedVersion" name="dq_result" minOneRecord="true" maxOneRecord="false">
						<attributes>
							<attribute path="validCount" name="validCount" type="LONG"/>
							<attribute path="invalidCount" name="invalidCount" type="LONG"/>
							<attribute path="overallQuality" name="overallQuality" type="FLOAT"/>
						</attributes>
						<dataStreams/>
						<scorer>
							<scoringEntries>
								<scoringEntry explain="true" score="0" explainAs="WLA_NOT_FOUND" key="WLA_NOT_FOUND"/>
								<scoringEntry explain="true" score="0" explainAs="WLA_MULTIPLE" key="WLA_MULTIPLE"/>
							</scoringEntries>
						</scorer>
						<shadowColumns>
							<shadowColumnDef defaultExpression="[in].attribute_id" name="attribute_id" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].originPath" name="originPath" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].Source" name="Source" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].table_path" name="table_path" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].Rule_to_run" name="Rule_to_run" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].attribute_name" name="attribute_name" type="STRING"/>
							<shadowColumnDef defaultExpression="[in].term_id" name="term_id" type="STRING"/>
						</shadowColumns>
						<comm:comment>{
  &quot;data&quot;: {
    &quot;attribute&quot;: {
      &quot;publishedVersion&quot;: {
        &quot;dqEvalAggr&quot;: {
          &quot;publishedVersion&quot;: {
            &quot;validityAggr&quot;: {
              &quot;publishedVersion&quot;: {
                &quot;validCount&quot;: 98,
                &quot;invalidCount&quot;: 24,
                &quot;overallQuality&quot;: 80.33
              }
            }
          }
        }
      }
    }
  }
}</comm:comment>
					</rootJsonStreamConfig>
				</dataStreams>
			</reader>
			<scorer>
				<scoringEntries>
					<scoringEntry explain="true" score="0" explainAs="WLA_TARGET_UNREACHABLE" key="WLA_TARGET_UNREACHABLE"/>
					<scoringEntry explain="true" score="0" explainAs="WLA_TIMEOUT" key="WLA_TIMEOUT"/>
					<scoringEntry explain="true" score="0" explainAs="WLA_RESPONSE_CODE" key="WLA_RESPONSE_CODE"/>
					<scoringEntry explain="true" score="0" explainAs="WLA_INVALID_JSON" key="WLA_INVALID_JSON"/>
				</scoringEntries>
			</scorer>
		</properties>
		<visual-constraints layout="vertical" bounds="480,216,-1,-1"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="out" step="read dq from attribute"/>
		<target endpoint="in" step="Trash"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source endpoint="dq_result" step="read dq from attribute"/>
		<target endpoint="in" step="dq_report.csv"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<modelComment backgroundColor="255,255,180" borderColor="183,183,0" bounds="720,48,433,361" foregroundColor="51,51,51">we are reading DQ from the attribute
for each attribute calling GQL api

we are parsing output message. 

Original input msg (before curl transform):

query q {attribute(gid:&quot;&lt;attribute id&gt;&quot;){
  publishedVersion{
    dqEvalAggr {
      publishedVersion {
        validityAggr {
          publishedVersion {
            validCount,invalidCount,overallQuality
          }
        }
      }
    }
  }
}}

sample output message that is parsed:
{
  &quot;data&quot;: {
    &quot;attribute&quot;: {
      &quot;publishedVersion&quot;: {
        &quot;dqEvalAggr&quot;: {
          &quot;publishedVersion&quot;: {
            &quot;validityAggr&quot;: {
              &quot;publishedVersion&quot;: {
                &quot;validCount&quot;: 98,
                &quot;invalidCount&quot;: 24,
                &quot;overallQuality&quot;: 80.33
              }
            }
          }
        }
      }
    }
  }
}</modelComment>

</purity-config>